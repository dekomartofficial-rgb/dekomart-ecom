# Docs: https://github.com/Azure/webapps-deploy

name: Build and deploy Node.js app to Azure Web App - dekomart

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Install Chrome dependencies and Puppeteer
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip \
            fonts-liberation libappindicator3-1 \
            libatk-bridge2.0-0t64 libatk1.0-0t64 libcups2t64 libdbus-1-3 \
            libgdk-pixbuf2.0-0 libnspr4 libnss3 libx11-xcb1 \
            libxcomposite1 libxdamage1 libxrandr2 xdg-utils \
            libasound2t64
          cd DekomartWebApi
          npm install
          npx --yes puppeteer browsers install chrome || echo "Puppeteer install fallback"

      - name: Build project
        run: |
          cd DekomartWebApi
          npm run build --if-present

      - name: Create web.config for Azure
        run: |
          cd DekomartWebApi
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <security>
                <requestFiltering>
                  <hiddenSegments>
                    <remove segment="bin"/>
                  </hiddenSegments>
                </requestFiltering>
              </security>
              <httpErrors existingResponse="PassThrough" />
            </system.webServer>
          </configuration>
          EOF

      - name: Prepare deployment package
        run: |
          cd DekomartWebApi
          # Remove dev dependencies for smaller package
          npm prune --production
          # Zip everything
          zip -r ../release.zip .

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip -d deploy
          rm release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_0EDB1B327325495186F3B19E3FB99FA6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0ECA4B4754E74EB4B067A7702F265D15 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_53953F6DA0F2433D9F73F0438DD99C3A }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'dekomartwebapi'
          slot-name: 'Production'
          package: deploy